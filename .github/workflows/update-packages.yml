name: Update packages

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  update-package:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - context7-mcp
          - github-mcp-server
          - mcp-grafana
          - playwright-mcp
          - serena
    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: Configure git
        run: |
          USER_ID=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email "$USER_ID+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - uses: nixbuild/nix-quick-install-action@5bb6a3b3abe66fd09bbf250dce8ada94f856a703 # v30

      - name: Update package
        id: update-package
        run: |
          if [[ "${{ matrix.package }}" == "context7-mcp" ]]; then
            echo updating...
            OUTPUT=$(./pkgs/official/context7/update.sh)
            echo done...
            echo $OUTPUT
          else
            if [[ "${{ matrix.package }}" == "serena" ]]; then
              VERSION_FLAG="--version=branch"
            else
              VERSION_FLAG=""
            fi

            OUTPUT=$(nix run nixpkgs#nix-update \
              -- --flake ${{ matrix.package }} $VERSION_FLAG --print-commit-message)
          fi

          # Extract title (first line containing package name)
          COMMIT_TITLE=$(echo "$OUTPUT" | grep -E "^${{ matrix.package }}:" | head -1)
          echo $COMMIT_TITLE

          # Extract body (Diff and Changelog lines)
          COMMIT_BODY=$(echo "$OUTPUT" | grep -E "^(Diff:|Changelog:)" | sed 's/$/\n/')
          echo $COMMIT_BODY

          echo "title=$COMMIT_TITLE" >> $GITHUB_OUTPUT
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ steps.app-token.outputs.token }}
          branch: auto-update/${{ matrix.package }}
          title: ${{ steps.update-package.outputs.title }}
          body: |
            ${{ steps.update-package.outputs.body }}
          commit-message: |
            ${{ steps.update-package.outputs.title }}

            ${{ steps.update-package.outputs.body }}
          sign-commits: true

      - name: Enable auto-merge
        if: steps.create-pr.outputs.pull-request-number
        run: |
          gh pr merge --auto --merge "${{ steps.create-pr.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
