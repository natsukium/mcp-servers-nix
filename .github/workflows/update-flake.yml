name: Update flake

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  update-flake:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: Configure git
        run: |
          USER_ID=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email "$USER_ID+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - uses: nixbuild/nix-quick-install-action@5bb6a3b3abe66fd09bbf250dce8ada94f856a703 # v30

      - name: Update flake inputs
        run: nix flake update --commit-lock-file

      - name: Get commit message
        id: commit-msg
        run: |
          COMMIT_TITLE=$(git log -1 --pretty=%s)
          COMMIT_BODY=$(git log -1 --pretty=%b)

          echo "title=$COMMIT_TITLE" >> $GITHUB_OUTPUT
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create signed commit
        run: |
          # Get the current commit information
          COMMIT_SHA=$(git rev-parse HEAD)
          PARENT_SHA=$(git rev-parse HEAD^)
          TREE_SHA=$(git rev-parse HEAD^{tree})
          
          # Create a new signed commit using GitHub API
          NEW_COMMIT=$(gh api /repos/${{ github.repository }}/git/commits \
            --method POST \
            --field message="${{ steps.commit-msg.outputs.title }}

          ${{ steps.commit-msg.outputs.body }}" \
            --field tree="$TREE_SHA" \
            --field parents[]="$PARENT_SHA" \
            --field signature="" \
            --jq .sha)
          
          # Update the branch reference to point to the new commit
          gh api /repos/${{ github.repository }}/git/refs/heads/${{ github.ref_name }} \
            --method PATCH \
            --field sha="$NEW_COMMIT" \
            --field force=true
          
          # Update local git to reflect the changes
          git fetch origin ${{ github.ref_name }}
          git reset --hard origin/${{ github.ref_name }}

          git log -1 --show-signature
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
